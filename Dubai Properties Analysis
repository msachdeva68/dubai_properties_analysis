{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1519896,"sourceType":"datasetVersion","datasetId":895919}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-29T11:08:28.138239Z","iopub.execute_input":"2024-08-29T11:08:28.138868Z","iopub.status.idle":"2024-08-29T11:08:28.146731Z","shell.execute_reply.started":"2024-08-29T11:08:28.138835Z","shell.execute_reply":"2024-08-29T11:08:28.145655Z"},"trusted":true},"execution_count":42,"outputs":[{"name":"stdout","text":"/kaggle/input/dubai-properties-dataset/properties_data.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Import the basic libareries required to access the data.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.148323Z","iopub.execute_input":"2024-08-29T11:08:28.148638Z","iopub.status.idle":"2024-08-29T11:08:28.157156Z","shell.execute_reply.started":"2024-08-29T11:08:28.148611Z","shell.execute_reply":"2024-08-29T11:08:28.156194Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":"Import data","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/dubai-properties-dataset/properties_data.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.158882Z","iopub.execute_input":"2024-08-29T11:08:28.159227Z","iopub.status.idle":"2024-08-29T11:08:28.183561Z","shell.execute_reply.started":"2024-08-29T11:08:28.159199Z","shell.execute_reply":"2024-08-29T11:08:28.182565Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"markdown","source":"Check the basic information.","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.185287Z","iopub.execute_input":"2024-08-29T11:08:28.185576Z","iopub.status.idle":"2024-08-29T11:08:28.199148Z","shell.execute_reply.started":"2024-08-29T11:08:28.185551Z","shell.execute_reply":"2024-08-29T11:08:28.198166Z"},"trusted":true},"execution_count":45,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1905 entries, 0 to 1904\nData columns (total 38 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   id                   1905 non-null   int64  \n 1   neighborhood         1905 non-null   object \n 2   latitude             1905 non-null   float64\n 3   longitude            1905 non-null   float64\n 4   price                1905 non-null   int64  \n 5   size_in_sqft         1905 non-null   int64  \n 6   price_per_sqft       1905 non-null   float64\n 7   no_of_bedrooms       1905 non-null   int64  \n 8   no_of_bathrooms      1905 non-null   int64  \n 9   quality              1905 non-null   object \n 10  maid_room            1905 non-null   bool   \n 11  unfurnished          1905 non-null   bool   \n 12  balcony              1905 non-null   bool   \n 13  barbecue_area        1905 non-null   bool   \n 14  built_in_wardrobes   1905 non-null   bool   \n 15  central_ac           1905 non-null   bool   \n 16  childrens_play_area  1905 non-null   bool   \n 17  childrens_pool       1905 non-null   bool   \n 18  concierge            1905 non-null   bool   \n 19  covered_parking      1905 non-null   bool   \n 20  kitchen_appliances   1905 non-null   bool   \n 21  lobby_in_building    1905 non-null   bool   \n 22  maid_service         1905 non-null   bool   \n 23  networked            1905 non-null   bool   \n 24  pets_allowed         1905 non-null   bool   \n 25  private_garden       1905 non-null   bool   \n 26  private_gym          1905 non-null   bool   \n 27  private_jacuzzi      1905 non-null   bool   \n 28  private_pool         1905 non-null   bool   \n 29  security             1905 non-null   bool   \n 30  shared_gym           1905 non-null   bool   \n 31  shared_pool          1905 non-null   bool   \n 32  shared_spa           1905 non-null   bool   \n 33  study                1905 non-null   bool   \n 34  vastu_compliant      1905 non-null   bool   \n 35  view_of_landmark     1905 non-null   bool   \n 36  view_of_water        1905 non-null   bool   \n 37  walk_in_closet       1905 non-null   bool   \ndtypes: bool(28), float64(3), int64(5), object(2)\nmemory usage: 201.0+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.200530Z","iopub.execute_input":"2024-08-29T11:08:28.200883Z","iopub.status.idle":"2024-08-29T11:08:28.224631Z","shell.execute_reply.started":"2024-08-29T11:08:28.200857Z","shell.execute_reply":"2024-08-29T11:08:28.223402Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"        id          neighborhood   latitude  longitude    price  size_in_sqft  \\\n0  5528049         Palm Jumeirah  25.113208  55.138932  2700000          1079   \n1  6008529         Palm Jumeirah  25.106809  55.151201  2850000          1582   \n2  6034542  Jumeirah Lake Towers  25.063302  55.137728  1150000          1951   \n3  6326063       Culture Village  25.227295  55.341761  2850000          2020   \n4  6356778         Palm Jumeirah  25.114275  55.139764  1729200           507   \n\n   price_per_sqft  no_of_bedrooms  no_of_bathrooms quality  ...  private_pool  \\\n0         2502.32               1                2  Medium  ...         False   \n1         1801.52               2                2  Medium  ...         False   \n2          589.44               3                5  Medium  ...         False   \n3         1410.89               2                3     Low  ...         False   \n4         3410.65               0                1  Medium  ...         False   \n\n   security  shared_gym  shared_pool  shared_spa  study  vastu_compliant  \\\n0     False        True        False       False  False            False   \n1     False        True         True       False  False            False   \n2      True        True         True       False  False            False   \n3     False       False        False       False  False            False   \n4      True        True         True        True  False            False   \n\n   view_of_landmark  view_of_water  walk_in_closet  \n0             False           True           False  \n1             False           True           False  \n2              True           True            True  \n3             False          False           False  \n4              True           True           False  \n\n[5 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5528049</td>\n      <td>Palm Jumeirah</td>\n      <td>25.113208</td>\n      <td>55.138932</td>\n      <td>2700000</td>\n      <td>1079</td>\n      <td>2502.32</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6008529</td>\n      <td>Palm Jumeirah</td>\n      <td>25.106809</td>\n      <td>55.151201</td>\n      <td>2850000</td>\n      <td>1582</td>\n      <td>1801.52</td>\n      <td>2</td>\n      <td>2</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6034542</td>\n      <td>Jumeirah Lake Towers</td>\n      <td>25.063302</td>\n      <td>55.137728</td>\n      <td>1150000</td>\n      <td>1951</td>\n      <td>589.44</td>\n      <td>3</td>\n      <td>5</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6326063</td>\n      <td>Culture Village</td>\n      <td>25.227295</td>\n      <td>55.341761</td>\n      <td>2850000</td>\n      <td>2020</td>\n      <td>1410.89</td>\n      <td>2</td>\n      <td>3</td>\n      <td>Low</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6356778</td>\n      <td>Palm Jumeirah</td>\n      <td>25.114275</td>\n      <td>55.139764</td>\n      <td>1729200</td>\n      <td>507</td>\n      <td>3410.65</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Data Cleaning","metadata":{}},{"cell_type":"code","source":"df.neighborhood = df.neighborhood.apply(lambda x: x.strip())\nlocation_stats = df.groupby('neighborhood')['neighborhood'].agg('count').sort_values(ascending=False)\nlocation_stats","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.226660Z","iopub.execute_input":"2024-08-29T11:08:28.227118Z","iopub.status.idle":"2024-08-29T11:08:28.239206Z","shell.execute_reply.started":"2024-08-29T11:08:28.227083Z","shell.execute_reply":"2024-08-29T11:08:28.238304Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"neighborhood\nDowntown Dubai                       302\nDubai Marina                         288\nJumeirah Village Circle              200\nPalm Jumeirah                        178\nJumeirah Beach Residence             116\nBusiness Bay                          97\nJumeirah Lake Towers                  70\nDubai Hills Estate                    53\nThe Views                             47\nJumeirah                              39\nDubai Creek Harbour (The Lagoons)     38\nMohammed Bin Rashid City              31\nDIFC                                  31\nDubai Harbour                         30\nGreens                                30\nMotor City                            27\nTown Square                           27\nDubai Sports City                     25\nAl Furjan                             23\nDAMAC Hills                           21\nMeydan                                17\nOld Town                              17\nCity Walk                             14\nUmm Suqeim                            13\nDubai Silicon Oasis                   12\nCulture Village                       11\nDubai Land                            11\nThe Hills                             11\nArjan                                 11\nAl Barari                             10\nBluewaters                             8\nWorld Trade Center                     8\nDiscovery Gardens                      8\nAl Sufouh                              8\nDubai Production City (IMPZ)           8\nAl Kifaf                               7\nRemraam                                6\nMirdif                                 6\nInternational City                     6\nDubai South (Dubai World Central)      5\nDubai Festival City                    5\nMudon                                  4\nAl Barsha                              4\nBarsha Heights (Tecom)                 4\nJumeirah Village Triangle              3\nFalcon City of Wonders                 3\nGreen Community                        2\nDubai Healthcare City                  2\nJumeirah Golf Estates                  2\nJebel Ali                              2\nMina Rashid                            1\nDubai Residence Complex                1\nAl Quoz                                1\nwasl gate                              1\nName: neighborhood, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"len(location_stats)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.240366Z","iopub.execute_input":"2024-08-29T11:08:28.240689Z","iopub.status.idle":"2024-08-29T11:08:28.249797Z","shell.execute_reply.started":"2024-08-29T11:08:28.240656Z","shell.execute_reply":"2024-08-29T11:08:28.248856Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"54"},"metadata":{}}]},{"cell_type":"code","source":"len(location_stats[location_stats<=10])","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.250950Z","iopub.execute_input":"2024-08-29T11:08:28.251241Z","iopub.status.idle":"2024-08-29T11:08:28.260441Z","shell.execute_reply.started":"2024-08-29T11:08:28.251216Z","shell.execute_reply":"2024-08-29T11:08:28.259523Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"25"},"metadata":{}}]},{"cell_type":"code","source":"location_less_than_10 = location_stats[location_stats<=10]\nlocation_less_than_10","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.261536Z","iopub.execute_input":"2024-08-29T11:08:28.261851Z","iopub.status.idle":"2024-08-29T11:08:28.273521Z","shell.execute_reply.started":"2024-08-29T11:08:28.261826Z","shell.execute_reply":"2024-08-29T11:08:28.272666Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"neighborhood\nAl Barari                            10\nBluewaters                            8\nWorld Trade Center                    8\nDiscovery Gardens                     8\nAl Sufouh                             8\nDubai Production City (IMPZ)          8\nAl Kifaf                              7\nRemraam                               6\nMirdif                                6\nInternational City                    6\nDubai South (Dubai World Central)     5\nDubai Festival City                   5\nMudon                                 4\nAl Barsha                             4\nBarsha Heights (Tecom)                4\nJumeirah Village Triangle             3\nFalcon City of Wonders                3\nGreen Community                       2\nDubai Healthcare City                 2\nJumeirah Golf Estates                 2\nJebel Ali                             2\nMina Rashid                           1\nDubai Residence Complex               1\nAl Quoz                               1\nwasl gate                             1\nName: neighborhood, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"In case we need to select all location which has less then 10 properties in their location then we can put them in others.","metadata":{}},{"cell_type":"code","source":"df.neighborhood = df.neighborhood.apply(lambda x: 'other' if x in location_less_than_10 else x)\nlen(df.neighborhood.unique())","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.274692Z","iopub.execute_input":"2024-08-29T11:08:28.274976Z","iopub.status.idle":"2024-08-29T11:08:28.289811Z","shell.execute_reply.started":"2024-08-29T11:08:28.274952Z","shell.execute_reply":"2024-08-29T11:08:28.288892Z"},"trusted":true},"execution_count":51,"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"30"},"metadata":{}}]},{"cell_type":"markdown","source":"Check the minimum sqft per room in the market.","metadata":{}},{"cell_type":"code","source":"df[df.size_in_sqft/df.no_of_bedrooms<350].head(20)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.292732Z","iopub.execute_input":"2024-08-29T11:08:28.293497Z","iopub.status.idle":"2024-08-29T11:08:28.318045Z","shell.execute_reply.started":"2024-08-29T11:08:28.293470Z","shell.execute_reply":"2024-08-29T11:08:28.317142Z"},"trusted":true},"execution_count":52,"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"           id neighborhood   latitude  longitude   price  size_in_sqft  \\\n1783  7697243        other  25.208435  55.315582  558000           325   \n\n      price_per_sqft  no_of_bedrooms  no_of_bathrooms quality  ...  \\\n1783         1716.92               1                1   Ultra  ...   \n\n      private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n1783         False      True        True         True        True   True   \n\n      vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n1783             True              True           True            True  \n\n[1 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1783</th>\n      <td>7697243</td>\n      <td>other</td>\n      <td>25.208435</td>\n      <td>55.315582</td>\n      <td>558000</td>\n      <td>325</td>\n      <td>1716.92</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Ultra</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"we have found only one property has less than 350 sqft per room.\nIf we want can remove this data to avoid the outlier.","metadata":{}},{"cell_type":"code","source":"df.price_per_sqft.describe()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.319428Z","iopub.execute_input":"2024-08-29T11:08:28.320234Z","iopub.status.idle":"2024-08-29T11:08:28.332641Z","shell.execute_reply.started":"2024-08-29T11:08:28.320206Z","shell.execute_reply":"2024-08-29T11:08:28.331558Z"},"trusted":true},"execution_count":53,"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"count    1905.000000\nmean     1327.243785\nstd       668.473559\nmin       361.870000\n25%       870.920000\n50%      1169.590000\n75%      1622.500000\nmax      4805.870000\nName: price_per_sqft, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"def remove_pps_outliar(df):\n    df_out = pd.DataFrame()\n    for key, subdf in df.groupby('neighborhood'):\n        m = np.mean(subdf.price_per_sqft)\n        std = np.std(subdf.price_per_sqft)\n        reduce_df = subdf[(subdf.price_per_sqft>(m-std))&((subdf.price_per_sqft)<=(m+std))]\n        df_out = pd.concat([df_out, reduce_df],ignore_index =True)\n    return df_out\n\ndf_1 = remove_pps_outliar(df=df)\n\ndf_1.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.333771Z","iopub.execute_input":"2024-08-29T11:08:28.334058Z","iopub.status.idle":"2024-08-29T11:08:28.391209Z","shell.execute_reply.started":"2024-08-29T11:08:28.334033Z","shell.execute_reply":"2024-08-29T11:08:28.390241Z"},"trusted":true},"execution_count":54,"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"(1373, 38)"},"metadata":{}}]},{"cell_type":"markdown","source":"Outlier Detection","metadata":{}},{"cell_type":"code","source":"\n\ndef plot_scatter_chart(df, neighborhood):\n    bhk2 = df[(df.neighborhood == neighborhood) & (df.no_of_bedrooms==2)]\n    bhk3 = df[(df.neighborhood == neighborhood) & (df.no_of_bedrooms==3)]\n    matplotlib.rcParams['figure.figsize'] =(15,10)\n    plt.scatter(bhk2.size_in_sqft, bhk2.price_per_sqft, color='blue', label = '2 BHK', s =50)\n    plt.scatter(bhk3.size_in_sqft, bhk3.price_per_sqft, marker = '+', color='green', label = '3 BHK', s =50)\n    plt.xlabel(\"Total Sqaure Feet Area\")\n    plt.ylabel(\"Price Per Sqaure Feet\")\n    plt.title(neighborhood)\n    plt.legend()\n\nplot_scatter_chart(df_1, \"Downtown Dubai\")","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.392288Z","iopub.execute_input":"2024-08-29T11:08:28.392557Z","iopub.status.idle":"2024-08-29T11:08:28.813961Z","shell.execute_reply.started":"2024-08-29T11:08:28.392532Z","shell.execute_reply":"2024-08-29T11:08:28.812944Z"},"trusted":true},"execution_count":55,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"We can see so many properties in the same location has less price the with more bed rooms and sqft area. So we have to remove those properties.\nFor that we need to build stats based in bedrooms.","metadata":{}},{"cell_type":"code","source":"def remove_bhk_outliers(df):\n    exclude_indices = np.array([])\n    for neighborhood, neighborhood_df in df.groupby('neighborhood'):\n        bhk_stats = {}\n        for no_of_bedrooms, bhk_df in neighborhood_df.groupby('no_of_bedrooms'):\n            bhk_stats[no_of_bedrooms] = {\n              'mean': np.mean(bhk_df.price_per_sqft),\n              'std': np.std(bhk_df.price_per_sqft),\n              'count': bhk_df.shape[0]\n              }\n        for no_of_bedrooms, bhk_df in neighborhood_df.groupby('no_of_bedrooms'):\n            stats = bhk_stats.get(no_of_bedrooms-1)\n            if stats and stats['count']>5:\n                exclude_indices= np.append(exclude_indices, bhk_df[bhk_df.price_per_sqft <(stats['mean'])].index.values) \n        return df.drop(exclude_indices, axis = 'index')\n\n\ndf_2 = remove_bhk_outliers(df_1)\ndf_2.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.817975Z","iopub.execute_input":"2024-08-29T11:08:28.818392Z","iopub.status.idle":"2024-08-29T11:08:28.837026Z","shell.execute_reply.started":"2024-08-29T11:08:28.818355Z","shell.execute_reply":"2024-08-29T11:08:28.835670Z"},"trusted":true},"execution_count":56,"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"(1367, 38)"},"metadata":{}}]},{"cell_type":"code","source":"df_2.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.838240Z","iopub.execute_input":"2024-08-29T11:08:28.838617Z","iopub.status.idle":"2024-08-29T11:08:28.861688Z","shell.execute_reply.started":"2024-08-29T11:08:28.838572Z","shell.execute_reply":"2024-08-29T11:08:28.860777Z"},"trusted":true},"execution_count":57,"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"        id neighborhood   latitude  longitude    price  size_in_sqft  \\\n1  7431684    Al Furjan  25.024620  55.140434  1051938          1191   \n3  7588198    Al Furjan  25.024620  55.140434  1055093          1191   \n4  7588200    Al Furjan  25.024620  55.140434   568801           750   \n5  7589790    Al Furjan  25.022618  55.149350   739000           928   \n7  7621746    Al Furjan  25.027786  55.154686   650000           795   \n\n   price_per_sqft  no_of_bedrooms  no_of_bathrooms quality  ...  private_pool  \\\n1          883.24               2                3    High  ...         False   \n3          885.89               2                3  Medium  ...         False   \n4          758.40               1                2  Medium  ...         False   \n5          796.34               2                2  Medium  ...         False   \n7          817.61               1                2    High  ...         False   \n\n   security  shared_gym  shared_pool  shared_spa  study  vastu_compliant  \\\n1      True        True         True       False  False            False   \n3     False        True         True       False  False            False   \n4     False        True         True       False  False            False   \n5     False        True         True       False  False            False   \n7      True        True         True        True  False            False   \n\n   view_of_landmark  view_of_water  walk_in_closet  \n1              True          False            True  \n3             False          False           False  \n4             False          False           False  \n5             False          False           False  \n7              True          False            True  \n\n[5 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>7431684</td>\n      <td>Al Furjan</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1051938</td>\n      <td>1191</td>\n      <td>883.24</td>\n      <td>2</td>\n      <td>3</td>\n      <td>High</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7588198</td>\n      <td>Al Furjan</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1055093</td>\n      <td>1191</td>\n      <td>885.89</td>\n      <td>2</td>\n      <td>3</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7588200</td>\n      <td>Al Furjan</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>568801</td>\n      <td>750</td>\n      <td>758.40</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7589790</td>\n      <td>Al Furjan</td>\n      <td>25.022618</td>\n      <td>55.149350</td>\n      <td>739000</td>\n      <td>928</td>\n      <td>796.34</td>\n      <td>2</td>\n      <td>2</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7621746</td>\n      <td>Al Furjan</td>\n      <td>25.027786</td>\n      <td>55.154686</td>\n      <td>650000</td>\n      <td>795</td>\n      <td>817.61</td>\n      <td>1</td>\n      <td>2</td>\n      <td>High</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"plot_scatter_chart(df_2, \"Downtown Dubai\")","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:28.863028Z","iopub.execute_input":"2024-08-29T11:08:28.863800Z","iopub.status.idle":"2024-08-29T11:08:29.247091Z","shell.execute_reply.started":"2024-08-29T11:08:28.863764Z","shell.execute_reply":"2024-08-29T11:08:29.246107Z"},"trusted":true},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"matplotlib.rcParams['figure.figsize'] =(15,10)\nplt.hist(df_2.price_per_sqft, rwidth=0.8)\nplt.xlabel(\"Price Per Sqaure Feet\")\nplt.ylabel(\"Count\")","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.248455Z","iopub.execute_input":"2024-08-29T11:08:29.248818Z","iopub.status.idle":"2024-08-29T11:08:29.547871Z","shell.execute_reply.started":"2024-08-29T11:08:29.248790Z","shell.execute_reply":"2024-08-29T11:08:29.546918Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'Count')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df_2[df_2.no_of_bathrooms>5]","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.549190Z","iopub.execute_input":"2024-08-29T11:08:29.549486Z","iopub.status.idle":"2024-08-29T11:08:29.574496Z","shell.execute_reply.started":"2024-08-29T11:08:29.549460Z","shell.execute_reply":"2024-08-29T11:08:29.573555Z"},"trusted":true},"execution_count":60,"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"           id     neighborhood   latitude  longitude    price  size_in_sqft  \\\n70    7673071     Business Bay  25.181311  55.262507  2600000          2791   \n130   7704040  Culture Village  25.226946  55.343628  7000000          4068   \n556   7613338     Dubai Marina  25.087979  55.146464  3950000          3882   \n1019  7683773           Meydan  25.150828  55.295714  2974999          2795   \n\n      price_per_sqft  no_of_bedrooms  no_of_bathrooms quality  ...  \\\n70            931.57               4                6  Medium  ...   \n130          1720.75               4                6     Low  ...   \n556          1017.52               3                6     Low  ...   \n1019         1064.40               4                6  Medium  ...   \n\n      private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n70           False     False        True         True       False  False   \n130          False     False       False        False       False  False   \n556          False     False       False        False       False  False   \n1019         False     False       False         True       False  False   \n\n      vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n70              False             False           True           False  \n130             False             False          False           False  \n556             False             False          False           False  \n1019            False             False          False           False  \n\n[4 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>70</th>\n      <td>7673071</td>\n      <td>Business Bay</td>\n      <td>25.181311</td>\n      <td>55.262507</td>\n      <td>2600000</td>\n      <td>2791</td>\n      <td>931.57</td>\n      <td>4</td>\n      <td>6</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>130</th>\n      <td>7704040</td>\n      <td>Culture Village</td>\n      <td>25.226946</td>\n      <td>55.343628</td>\n      <td>7000000</td>\n      <td>4068</td>\n      <td>1720.75</td>\n      <td>4</td>\n      <td>6</td>\n      <td>Low</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>556</th>\n      <td>7613338</td>\n      <td>Dubai Marina</td>\n      <td>25.087979</td>\n      <td>55.146464</td>\n      <td>3950000</td>\n      <td>3882</td>\n      <td>1017.52</td>\n      <td>3</td>\n      <td>6</td>\n      <td>Low</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1019</th>\n      <td>7683773</td>\n      <td>Meydan</td>\n      <td>25.150828</td>\n      <td>55.295714</td>\n      <td>2974999</td>\n      <td>2795</td>\n      <td>1064.40</td>\n      <td>4</td>\n      <td>6</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"matplotlib.rcParams['figure.figsize'] =(15,10)\nplt.hist(df_2.no_of_bathrooms, rwidth=0.8)\nplt.xlabel(\"No of Bathrooms\")\nplt.ylabel(\"Count\")","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.575581Z","iopub.execute_input":"2024-08-29T11:08:29.575893Z","iopub.status.idle":"2024-08-29T11:08:29.905805Z","shell.execute_reply.started":"2024-08-29T11:08:29.575868Z","shell.execute_reply":"2024-08-29T11:08:29.904895Z"},"trusted":true},"execution_count":61,"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'Count')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAABNYAAANBCAYAAAAssTPKAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA7nklEQVR4nO3df7SWdb3n/9fmtyJ7IxzZGxLBUhEQ1JSRrdWUomTo6JLSGjL0OP0wIJXyGDMmiOcIOfmzELNV4JnRMZ2OndTUBBNnEg1pOAEaxxpdULChyWQLJSD7/v7Rlz3tUTM+gvfem8djrXst7uu67ut6X+DlYj259nXXVCqVSgAAAACA3dKl2gMAAAAAQEckrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFulV7gPagpaUl69evT58+fVJTU1PtcQAAAACokkqlkldeeSWDBg1Kly5/+Z40YS3J+vXrM3jw4GqPAQAAAEA7sW7duhx88MF/cRthLUmfPn2S/Ok3rLa2tsrTAAAAAFAtzc3NGTx4cGsv+kuEtaT1xz9ra2uFNQAAAAD+qseF+fICAAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKNCt2gMAdDRDv/xgtUfolF6cO6HaIwAAAOwWd6wBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQoKphbdasWampqWnzOvLII1vXv/rqq5kyZUr69++fAw44IBMnTszGjRvb7GPt2rWZMGFC9t9//wwYMCCXX355XnvttXf6VAAAAADYx3Sr9gAjR47MokWLWt936/Z/R7rsssvy4IMP5t57701dXV2mTp2ac845Jz/5yU+SJDt37syECRPS0NCQJ598Mhs2bMinPvWpdO/ePddee+07fi4AAAAA7DuqHta6deuWhoaG1y3fvHlzvv3tb+euu+7KySefnCRZsGBBhg8fnqeeeipjx47Nj370ozz77LNZtGhR6uvrc8wxx+Saa67JFVdckVmzZqVHjx7v9OkAAAAAsI+o+jPWnn/++QwaNCjvfve7M2nSpKxduzZJsnz58uzYsSPjxo1r3fbII4/MIYcckqVLlyZJli5dmlGjRqW+vr51m/Hjx6e5uTmrV69+Z08EAAAAgH1KVe9YO+GEE7Jw4cIMGzYsGzZsyNVXX533v//9WbVqVZqamtKjR4/07du3zWfq6+vT1NSUJGlqamoT1Xat37XuzWzbti3btm1rfd/c3LyHzggAAACAfUVVw9rpp5/e+uvRo0fnhBNOyJAhQ3LPPfdkv/3222vHnTNnTq6++uq9tn8AAAAAOr+q/yjon+vbt2+OOOKI/PKXv0xDQ0O2b9+el19+uc02GzdubH0mW0NDw+u+JXTX+zd6btsuM2bMyObNm1tf69at27MnAgAAAECn167C2pYtW/KrX/0qAwcOzHHHHZfu3btn8eLFrevXrFmTtWvXprGxMUnS2NiYlStXZtOmTa3bPProo6mtrc2IESPe9Dg9e/ZMbW1tmxcAAAAA7I6q/ijol770pZx55pkZMmRI1q9fn5kzZ6Zr1675xCc+kbq6ulx00UWZPn16+vXrl9ra2kybNi2NjY0ZO3ZskuS0007LiBEjcv755+e6665LU1NTrrzyykyZMiU9e/as5qkBAAAA0MlVNaz9+te/zic+8Yn87ne/y0EHHZT3ve99eeqpp3LQQQclSW688cZ06dIlEydOzLZt2zJ+/PjceuutrZ/v2rVrHnjggVx88cVpbGxM7969M3ny5MyePbtapwQAAADAPqKmUqlUqj1EtTU3N6euri6bN2/2Y6HAWxr65QerPUKn9OLcCdUeAQAAYLc6Ubt6xhoAAAAAdBTCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALdqj0AAMAuQ7/8YLVH6JRenDuh2iMAAHRK7lgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAECBdhPW5s6dm5qamlx66aWty1599dVMmTIl/fv3zwEHHJCJEydm48aNbT63du3aTJgwIfvvv38GDBiQyy+/PK+99to7PD0AAAAA+5p2EdaWLVuWb37zmxk9enSb5Zdddlnuv//+3HvvvVmyZEnWr1+fc845p3X9zp07M2HChGzfvj1PPvlk7rjjjixcuDBXXXXVO30KAAAAAOxjqh7WtmzZkkmTJuVb3/pWDjzwwNblmzdvzre//e3ccMMNOfnkk3PcccdlwYIFefLJJ/PUU08lSX70ox/l2WefzX/9r/81xxxzTE4//fRcc801mTdvXrZv316tUwIAAABgH1D1sDZlypRMmDAh48aNa7N8+fLl2bFjR5vlRx55ZA455JAsXbo0SbJ06dKMGjUq9fX1rduMHz8+zc3NWb169Zsec9u2bWlubm7zAgAAAIDd0a2aB7/77rvzs5/9LMuWLXvduqampvTo0SN9+/Zts7y+vj5NTU2t2/x5VNu1fte6NzNnzpxcffXVb3N6AAAAAPZlVbtjbd26dbnkkkty5513plevXu/osWfMmJHNmze3vtatW/eOHh8AAACAjq9qYW358uXZtGlT3vve96Zbt27p1q1blixZkltuuSXdunVLfX19tm/fnpdffrnN5zZu3JiGhoYkSUNDw+u+JXTX+13bvJGePXumtra2zQsAAAAAdkfVwtopp5ySlStXZsWKFa2v448/PpMmTWr9dffu3bN48eLWz6xZsyZr165NY2NjkqSxsTErV67Mpk2bWrd59NFHU1tbmxEjRrzj5wQAAADAvqNqz1jr06dPjjrqqDbLevfunf79+7cuv+iiizJ9+vT069cvtbW1mTZtWhobGzN27NgkyWmnnZYRI0bk/PPPz3XXXZempqZceeWVmTJlSnr27PmOnxMAAAAA+46qfnnBW7nxxhvTpUuXTJw4Mdu2bcv48eNz6623tq7v2rVrHnjggVx88cVpbGxM7969M3ny5MyePbuKUwMAAACwL2hXYe3xxx9v875Xr16ZN29e5s2b96afGTJkSH74wx/u5ckAAAAAoK2qPWMNAAAAADoyYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAA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UEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoICwBgAAAAAFhDUAAAAAKCCsAQAAAEABYQ0AAAAACghrAAAAAFBAWAMAAACAAsIaAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACggrAEAAABAAWENAAAAAAoIawAAAABQQFgDAAAAgALCGgAAAAAUENYAAAAAoEBVw9oTTzyRM888M4MGDUpNTU2+//3vt1lfqVRy1VVXZeDAgdlvv/0ybty4PP/88222eemllzJp0qTU1tamb9++ueiii7Jly5Z38CwAAAAA2BdVNaxt3bo1Rx99dObNm/eG66+77rrccsstue222/L000+nd+/eGT9+fF599dXWbSZNmpTVq1fn0UcfzQMPPJAnnngin/nMZ96pUwAAAABgH9Wtmgc//fTTc/rpp7/hukqlkptuuilXXnllzjrrrCTJP/7jP6a+vj7f//738/GPfzzPPfdcHn744SxbtizHH398kuTrX/96PvKRj+RrX/taBg0a9I6dCwAAAAD7lnb7jLUXXnghTU1NGTduXOuyurq6nHDCCVm6dGmSZOnSpenbt29rVEuScePGpUuXLnn66affdN/btm1Lc3NzmxcAAAAA7I52G9aampqSJPX19W2W19fXt65ramrKgAED2qzv1q1b+vXr17rNG5kzZ07q6upaX4MHD97D0wMAAADQ2bXbsLY3zZgxI5s3b259rVu3rtojAQAAANDBtNuw1tDQkCTZuHFjm+UbN25sXdfQ0JBNmza1Wf/aa6/lpZdeat3mjfTs2TO1tbVtXgAAAACwO9ptWDv00EPT0NCQxYsXty5rbm7O008/ncbGxiRJY2NjXn755Sxfvrx1m8ceeywtLS054YQT3vGZAQAAANh3VPVbQbds2ZJf/vKXre9feOGFrFixIv369cshhxySSy+9NH//93+fww8/PIceemi+8pWvZNCgQTn77LOTJMOHD8+HP/zhfPrTn85tt92WHTt2ZOrUqfn4xz/uG0EBAAAA2KuqGtaeeeaZfOhDH2p9P336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aWnJtm3bqj0GdGinnHJKVq5c2WbZhRdemCOPPDJXXHFFunbtWqXJoPPZsmVLfvWrX+X888+v9ijQ4Z100klZs2ZNm2X/+q//miFDhlRpoj1HWOsAtmzZ0uZfSV544YWsWLEi/fr1yyGHHFLFyaBjmzJlSu6666788z//c/r06ZOmpqYkSV1dXfbbb78qTwcd24wZM3L66afnkEMOySuvvJK77rorjz/+eB555JFqjwYdWp8+fV73LNDevXunf//+nhEKb9OXvvSlnHnmmRkyZEjWr1+fmTNnpmvXrvnEJz5R7dGgw7vsssty4okn5tprr825556bn/70p7n99ttz++23V3u0t01Y6wCeeeaZfOhDH2p9P3369CTJ5MmTs3DhwipNBR3f/PnzkyQf/OAH2yxfsGBBLrjggnd+IOhENm3alE996lPZsGFD6urqMnr06DzyyCM59dRTqz0aALyhX//61/nEJz6R3/3udznooIPyvve9L0899VQOOuigao8GHd6YMWNy3333ZcaMGZk9e3YOPfTQ3HTTTZk0aVK1R3vbaiqVSqXaQwAAAABAR+PLCwAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAQAfR1NSUU089Nb17907fvn2rMsPQoUNz0003VeXYAADtjbAGAPBXuuCCC1JTU5O5c+e2Wf79738/NTU1e/34N954YzZs2JAVK1bkX//1X99wm1mzZqWmpqb1VVdXl/e///1ZsmTJbh1r4cKFVYt3AAAdhbAGALAbevXqla9+9av5/e9//44f+1e/+lWOO+64HH744RkwYMCbbjdy5Mhs2LAhGzZsyNKlS3P44YfnjDPOyObNm9/Baf+vHTt2VOW4AAB7m7AGALAbxo0bl4aGhsyZM+cvbve9730vI0eOTM+ePTN06NBcf/31b7nv+fPn5z3veU969OiRYcOG5b/8l//Sum7o0KH53ve+l3/8x39MTU1NLrjggjfdT7du3dLQ0JCGhoaMGDEis2fPzpYtW9rc5XbDDTdk1KhR6d27dwYPHpzPf/7z2bJlS5Lk8ccfz4UXXpjNmze33vk2a9as1s/+4Q9/yN/+7d+mT58+OeSQQ3L77be3rnvxxRdTU1OT7373u/m3//bfplevXrnzzjvT0tKS2bNn5+CDD07Pnj1zzDHH5OGHH24z98qVK3PyySdnv/32S//+/fOZz3ymdabkT3cMnn322bn22mtTX1+fvn37Zvbs2Xnttddy+eWXp1+/fjn44IOzYMGC1s9s3749U6dOzcCBA9OrV68MGTLkLf/sAAD+WsIaAMBu6Nq1a6699tp8/etfz69//es33Gb58uU599xz8/GPfzwrV67MrFmz8pWvfCULFy580/3ed999ueSSS/LFL34xq1atymc/+9lceOGF+fGPf5wkWbZsWT784Q/n3HPPzYYNG3LzzTf/VfNu27YtCxYsSN++fTNs2LDW5V26dMktt9yS1atX54477shjjz2Wv/u7v0uSnHjiibnppptSW1vbeufbl770pdbPXn/99Tn++OPzv/7X/8rnP//5XHzxxVmzZk2b4375y1/OJZdckueeey7jx4/PzTffnOuvvz5f+9rX8vOf/zzjx4/Pv/t3/y7PP/98kmTr1q0ZP358DjzwwCxbtiz33ntvFi1alKlTp7bZ72OPPZb169fniSeeyA033JCZM2fmjDPOyIEHHpinn346n/vc5/LZz3629c/mlltuyQ9+8IPcc889WbNmTe68884MHTr0r/q9AwB4SxUAAP4qkydPrpx11lmVSqVSGTt2bOVv//ZvK5VKpXLfffdV/vyvVf/+3//7yqmnntrms5dffnllxIgRb7rvE088sfLpT3+6zbKPfexjlY985COt788666zK5MmT/+KMM2fOrHTp0qXSu3fvSu/evSs1NTWV2traykMPPfQXP3fvvfdW+vfv3/p+wYIFlbq6utdtN2TIkMonP/nJ1vctLS2VAQMGVObPn1+pVCqVF154oZKkctNNN7X53KBBgyr/8A//0GbZmDFjKp///OcrlUqlcvvtt1cOPPDAypYtW1rXP/jgg5UuXbpUmpqaKpXKn37/hwwZUtm5c2frNsOGDau8//3vb33/2muvVXr37l35b//tv1UqlUpl2rRplZNPPrnS0tLyF88fAKCEO9YAAAp89atfzR133JHnnnvudeuee+65nHTSSW2WnXTSSXn++eezc+fON9zfm33mjfb/VoYNG5YVK1ZkxYoVWb58eS6++OJ87GMfyzPPPNO6zaJFi3LKKafkXe96V/r06ZPzzz8/v/vd7/KHP/zhLfc/evTo1l/X1NSkoaEhmzZtarPN8ccf3/rr5ubmrF+//i+e33PPPZejjz46vXv3brO+paWlzd1wI0eOTJcu//evsPX19Rk1alTr+65du6Z///6t81xwwQVZsWJFhg0bli984Qv50Y9+9JbnBwDw1xLWAAAKfOADH8j48eMzY8aMao/yOj169Mhhhx2Www47LMcee2zmzp2bd73rXbnpppuS/Ok5aGeccUZGjx6d733ve1m+fHnmzZuX5E/PJHsr3bt3b/O+pqYmLS0tbZb9eSDbk97o2H9pnve+97154YUXcs011+SPf/xjzj333Hz0ox/dK7MBAPseYQ0AoNDcuXNz//33Z+nSpW2WDx8+PD/5yU/aLPvJT36SI444Il27dn3Dfb3ZZ0aMGLFHZu3atWv++Mc/JvnTM+BaWlpy/fXXZ+zYsTniiCOyfv36Ntv36NHjTe+u2121tbUZNGjQXzy/4cOH51/+5V+ydevWNuu7dOnS5tlwpcc/77zz8q1vfSvf/e53873vfS8vvfTS29onAECSdKv2AAAAHdWoUaMyadKk3HLLLW2Wf/GLX8yYMWNyzTXX5LzzzsvSpUvzjW98I7feeuub7uvyyy/Pueeem2OPPTbjxo3L/fffn3/6p3/KokWLdnuu1157LU1NTUmSV155Jd/97nfz7LPP5oorrkiSHHbYYdmxY0e+/vWv58wzz8xPfvKT3HbbbW32MXTo0GzZsiWLFy/O0Ucfnf333z/777//bs/y5+c3c+bMvOc978kxxxyTBQsWZMWKFbnzzjuTJJMmTcrMmTMzefLkzJo1K7/97W8zbdq0nH/++amvry8+7g033JCBAwfm2GOPTZcuXXLvvfemoaEhffv2Ld4nAMAu7lgDAHgbZs+e/bofg3zve9+be+65J3fffXeOOuqoXHXVVZk9e3YuuOCCN93P2WefnZtvvjlf+9rXMnLkyHzzm9/MggUL8sEPfnC3Z1q9enUGDhyYgQMH5phjjsk999yT+fPn51Of+lSS5Oijj84NN9yQr371qznqqKNy5513Zs6cOW32ceKJJ+Zzn/tczjvvvBx00EG57rrrdnuOP/eFL3wh06dPzxe/+MWMGjUqDz/8cH7wgx/k8MMPT5Lsv//+eeSRR/LSSy9lzJgx+ehHP5pTTjkl3/jGN97Wcfv06ZPrrrsuxx9/fMaMGZMXX3wxP/zhD9s8pw0AoFRNpVKpVHsIAAAAAOho/FMdAAAAABQQ1gAAAACggLAGAAAAAAWENQAAAAAoIKwBAAAAQAFhDQAAAAAKCGsAAAAAUEBYAwAAAIACwhoAAAAAFBDWAAAAAKCAsAYAAAAABYQ1AAAAACjw/wHNrAbv//ouwQAAAABJRU5ErkJggg=="},"metadata":{}}]},{"cell_type":"code","source":"df_2[df_2.no_of_bathrooms>df_2.no_of_bedrooms+2]","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.907122Z","iopub.execute_input":"2024-08-29T11:08:29.907429Z","iopub.status.idle":"2024-08-29T11:08:29.929467Z","shell.execute_reply.started":"2024-08-29T11:08:29.907396Z","shell.execute_reply":"2024-08-29T11:08:29.928645Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"           id   neighborhood   latitude  longitude    price  size_in_sqft  \\\n556   7613338   Dubai Marina  25.087979  55.146464  3950000          3882   \n1121  7533422  Palm Jumeirah  25.106964  55.111349  2499000          1367   \n\n      price_per_sqft  no_of_bedrooms  no_of_bathrooms quality  ...  \\\n556          1017.52               3                6     Low  ...   \n1121         1828.09               2                5     Low  ...   \n\n      private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n556          False     False       False        False       False  False   \n1121         False     False       False        False       False  False   \n\n      vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n556             False             False          False           False  \n1121            False             False          False           False  \n\n[2 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>556</th>\n      <td>7613338</td>\n      <td>Dubai Marina</td>\n      <td>25.087979</td>\n      <td>55.146464</td>\n      <td>3950000</td>\n      <td>3882</td>\n      <td>1017.52</td>\n      <td>3</td>\n      <td>6</td>\n      <td>Low</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1121</th>\n      <td>7533422</td>\n      <td>Palm Jumeirah</td>\n      <td>25.106964</td>\n      <td>55.111349</td>\n      <td>2499000</td>\n      <td>1367</td>\n      <td>1828.09</td>\n      <td>2</td>\n      <td>5</td>\n      <td>Low</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_3 = df_2[df_2.no_of_bathrooms<df_2.no_of_bedrooms+2]\ndf_3.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.930611Z","iopub.execute_input":"2024-08-29T11:08:29.931167Z","iopub.status.idle":"2024-08-29T11:08:29.941449Z","shell.execute_reply.started":"2024-08-29T11:08:29.931130Z","shell.execute_reply":"2024-08-29T11:08:29.940504Z"},"trusted":true},"execution_count":63,"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"(1317, 38)"},"metadata":{}}]},{"cell_type":"code","source":"df_3.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.942545Z","iopub.execute_input":"2024-08-29T11:08:29.942856Z","iopub.status.idle":"2024-08-29T11:08:29.955749Z","shell.execute_reply.started":"2024-08-29T11:08:29.942832Z","shell.execute_reply":"2024-08-29T11:08:29.954742Z"},"trusted":true},"execution_count":64,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 1317 entries, 1 to 1372\nData columns (total 38 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   id                   1317 non-null   int64  \n 1   neighborhood         1317 non-null   object \n 2   latitude             1317 non-null   float64\n 3   longitude            1317 non-null   float64\n 4   price                1317 non-null   int64  \n 5   size_in_sqft         1317 non-null   int64  \n 6   price_per_sqft       1317 non-null   float64\n 7   no_of_bedrooms       1317 non-null   int64  \n 8   no_of_bathrooms      1317 non-null   int64  \n 9   quality              1317 non-null   object \n 10  maid_room            1317 non-null   bool   \n 11  unfurnished          1317 non-null   bool   \n 12  balcony              1317 non-null   bool   \n 13  barbecue_area        1317 non-null   bool   \n 14  built_in_wardrobes   1317 non-null   bool   \n 15  central_ac           1317 non-null   bool   \n 16  childrens_play_area  1317 non-null   bool   \n 17  childrens_pool       1317 non-null   bool   \n 18  concierge            1317 non-null   bool   \n 19  covered_parking      1317 non-null   bool   \n 20  kitchen_appliances   1317 non-null   bool   \n 21  lobby_in_building    1317 non-null   bool   \n 22  maid_service         1317 non-null   bool   \n 23  networked            1317 non-null   bool   \n 24  pets_allowed         1317 non-null   bool   \n 25  private_garden       1317 non-null   bool   \n 26  private_gym          1317 non-null   bool   \n 27  private_jacuzzi      1317 non-null   bool   \n 28  private_pool         1317 non-null   bool   \n 29  security             1317 non-null   bool   \n 30  shared_gym           1317 non-null   bool   \n 31  shared_pool          1317 non-null   bool   \n 32  shared_spa           1317 non-null   bool   \n 33  study                1317 non-null   bool   \n 34  vastu_compliant      1317 non-null   bool   \n 35  view_of_landmark     1317 non-null   bool   \n 36  view_of_water        1317 non-null   bool   \n 37  walk_in_closet       1317 non-null   bool   \ndtypes: bool(28), float64(3), int64(5), object(2)\nmemory usage: 149.2+ KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"One Hot Encoding","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.957099Z","iopub.execute_input":"2024-08-29T11:08:29.957713Z","iopub.status.idle":"2024-08-29T11:08:29.962084Z","shell.execute_reply.started":"2024-08-29T11:08:29.957679Z","shell.execute_reply":"2024-08-29T11:08:29.961069Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"code","source":"dfle = df_3\ndfle.neighborhood = le.fit_transform(dfle.neighborhood)\ndfle","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.963320Z","iopub.execute_input":"2024-08-29T11:08:29.964104Z","iopub.status.idle":"2024-08-29T11:08:29.993078Z","shell.execute_reply.started":"2024-08-29T11:08:29.964070Z","shell.execute_reply":"2024-08-29T11:08:29.992210Z"},"trusted":true},"execution_count":66,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/472830295.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  dfle.neighborhood = le.fit_transform(dfle.neighborhood)\n","output_type":"stream"},{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"           id  neighborhood   latitude  longitude    price  size_in_sqft  \\\n1     7431684             0  25.024620  55.140434  1051938          1191   \n3     7588198             0  25.024620  55.140434  1055093          1191   \n4     7588200             0  25.024620  55.140434   568801           750   \n5     7589790             0  25.022618  55.149350   739000           928   \n7     7621746             0  25.027786  55.154686   650000           795   \n...       ...           ...        ...        ...      ...           ...   \n1368  7697260            29  25.004258  55.245986   260000           401   \n1369  7697325            29  24.978409  55.092120   420000           430   \n1370  7699951            29  25.100921  55.313162  2800000          2745   \n1371  7700652            29  25.091311  55.378277   270000           460   \n1372  7705293            29  25.153080  55.254242   360000           600   \n\n      price_per_sqft  no_of_bedrooms  no_of_bathrooms quality  ...  \\\n1             883.24               2                3    High  ...   \n3             885.89               2                3  Medium  ...   \n4             758.40               1                2  Medium  ...   \n5             796.34               2                2  Medium  ...   \n7             817.61               1                2    High  ...   \n...              ...             ...              ...     ...  ...   \n1368          648.38               0                1  Medium  ...   \n1369          976.74               0                1  Medium  ...   \n1370         1020.04               2                3  Medium  ...   \n1371          586.96               0                1     Low  ...   \n1372          600.00               0                1  Medium  ...   \n\n      private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n1            False      True        True         True       False  False   \n3            False     False        True         True       False  False   \n4            False     False        True         True       False  False   \n5            False     False        True         True       False  False   \n7            False      True        True         True        True  False   \n...            ...       ...         ...          ...         ...    ...   \n1368         False      True        True         True       False  False   \n1369         False      True        True         True       False  False   \n1370         False     False        True         True       False  False   \n1371         False     False        True         True       False  False   \n1372         False      True        True         True       False  False   \n\n      vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n1               False              True          False            True  \n3               False             False          False           False  \n4               False             False          False           False  \n5               False             False          False           False  \n7               False              True          False            True  \n...               ...               ...            ...             ...  \n1368            False              True          False           False  \n1369            False             False          False           False  \n1370            False             False          False           False  \n1371            False             False          False           False  \n1372            False             False          False            True  \n\n[1317 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>7431684</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1051938</td>\n      <td>1191</td>\n      <td>883.24</td>\n      <td>2</td>\n      <td>3</td>\n      <td>High</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7588198</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1055093</td>\n      <td>1191</td>\n      <td>885.89</td>\n      <td>2</td>\n      <td>3</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7588200</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>568801</td>\n      <td>750</td>\n      <td>758.40</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7589790</td>\n      <td>0</td>\n      <td>25.022618</td>\n      <td>55.149350</td>\n      <td>739000</td>\n      <td>928</td>\n      <td>796.34</td>\n      <td>2</td>\n      <td>2</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7621746</td>\n      <td>0</td>\n      <td>25.027786</td>\n      <td>55.154686</td>\n      <td>650000</td>\n      <td>795</td>\n      <td>817.61</td>\n      <td>1</td>\n      <td>2</td>\n      <td>High</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1368</th>\n      <td>7697260</td>\n      <td>29</td>\n      <td>25.004258</td>\n      <td>55.245986</td>\n      <td>260000</td>\n      <td>401</td>\n      <td>648.38</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1369</th>\n      <td>7697325</td>\n      <td>29</td>\n      <td>24.978409</td>\n      <td>55.092120</td>\n      <td>420000</td>\n      <td>430</td>\n      <td>976.74</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1370</th>\n      <td>7699951</td>\n      <td>29</td>\n      <td>25.100921</td>\n      <td>55.313162</td>\n      <td>2800000</td>\n      <td>2745</td>\n      <td>1020.04</td>\n      <td>2</td>\n      <td>3</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1371</th>\n      <td>7700652</td>\n      <td>29</td>\n      <td>25.091311</td>\n      <td>55.378277</td>\n      <td>270000</td>\n      <td>460</td>\n      <td>586.96</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Low</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1372</th>\n      <td>7705293</td>\n      <td>29</td>\n      <td>25.153080</td>\n      <td>55.254242</td>\n      <td>360000</td>\n      <td>600</td>\n      <td>600.00</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Medium</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>1317 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"dfle.quality = le.fit_transform(dfle.quality)\ndfle","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:29.996884Z","iopub.execute_input":"2024-08-29T11:08:29.997228Z","iopub.status.idle":"2024-08-29T11:08:30.021989Z","shell.execute_reply.started":"2024-08-29T11:08:29.997203Z","shell.execute_reply":"2024-08-29T11:08:30.021123Z"},"trusted":true},"execution_count":67,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/813066412.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  dfle.quality = le.fit_transform(dfle.quality)\n","output_type":"stream"},{"execution_count":67,"output_type":"execute_result","data":{"text/plain":"           id  neighborhood   latitude  longitude    price  size_in_sqft  \\\n1     7431684             0  25.024620  55.140434  1051938          1191   \n3     7588198             0  25.024620  55.140434  1055093          1191   \n4     7588200             0  25.024620  55.140434   568801           750   \n5     7589790             0  25.022618  55.149350   739000           928   \n7     7621746             0  25.027786  55.154686   650000           795   \n...       ...           ...        ...        ...      ...           ...   \n1368  7697260            29  25.004258  55.245986   260000           401   \n1369  7697325            29  24.978409  55.092120   420000           430   \n1370  7699951            29  25.100921  55.313162  2800000          2745   \n1371  7700652            29  25.091311  55.378277   270000           460   \n1372  7705293            29  25.153080  55.254242   360000           600   \n\n      price_per_sqft  no_of_bedrooms  no_of_bathrooms  quality  ...  \\\n1             883.24               2                3        0  ...   \n3             885.89               2                3        2  ...   \n4             758.40               1                2        2  ...   \n5             796.34               2                2        2  ...   \n7             817.61               1                2        0  ...   \n...              ...             ...              ...      ...  ...   \n1368          648.38               0                1        2  ...   \n1369          976.74               0                1        2  ...   \n1370         1020.04               2                3        2  ...   \n1371          586.96               0                1        1  ...   \n1372          600.00               0                1        2  ...   \n\n      private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n1            False      True        True         True       False  False   \n3            False     False        True         True       False  False   \n4            False     False        True         True       False  False   \n5            False     False        True         True       False  False   \n7            False      True        True         True        True  False   \n...            ...       ...         ...          ...         ...    ...   \n1368         False      True        True         True       False  False   \n1369         False      True        True         True       False  False   \n1370         False     False        True         True       False  False   \n1371         False     False        True         True       False  False   \n1372         False      True        True         True       False  False   \n\n      vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n1               False              True          False            True  \n3               False             False          False           False  \n4               False             False          False           False  \n5               False             False          False           False  \n7               False              True          False            True  \n...               ...               ...            ...             ...  \n1368            False              True          False           False  \n1369            False             False          False           False  \n1370            False             False          False           False  \n1371            False             False          False           False  \n1372            False             False          False            True  \n\n[1317 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>7431684</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1051938</td>\n      <td>1191</td>\n      <td>883.24</td>\n      <td>2</td>\n      <td>3</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7588198</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1055093</td>\n      <td>1191</td>\n      <td>885.89</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7588200</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>568801</td>\n      <td>750</td>\n      <td>758.40</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7589790</td>\n      <td>0</td>\n      <td>25.022618</td>\n      <td>55.149350</td>\n      <td>739000</td>\n      <td>928</td>\n      <td>796.34</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7621746</td>\n      <td>0</td>\n      <td>25.027786</td>\n      <td>55.154686</td>\n      <td>650000</td>\n      <td>795</td>\n      <td>817.61</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1368</th>\n      <td>7697260</td>\n      <td>29</td>\n      <td>25.004258</td>\n      <td>55.245986</td>\n      <td>260000</td>\n      <td>401</td>\n      <td>648.38</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1369</th>\n      <td>7697325</td>\n      <td>29</td>\n      <td>24.978409</td>\n      <td>55.092120</td>\n      <td>420000</td>\n      <td>430</td>\n      <td>976.74</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1370</th>\n      <td>7699951</td>\n      <td>29</td>\n      <td>25.100921</td>\n      <td>55.313162</td>\n      <td>2800000</td>\n      <td>2745</td>\n      <td>1020.04</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1371</th>\n      <td>7700652</td>\n      <td>29</td>\n      <td>25.091311</td>\n      <td>55.378277</td>\n      <td>270000</td>\n      <td>460</td>\n      <td>586.96</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1372</th>\n      <td>7705293</td>\n      <td>29</td>\n      <td>25.153080</td>\n      <td>55.254242</td>\n      <td>360000</td>\n      <td>600</td>\n      <td>600.00</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>1317 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"dfle.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.023083Z","iopub.execute_input":"2024-08-29T11:08:30.023355Z","iopub.status.idle":"2024-08-29T11:08:30.044164Z","shell.execute_reply.started":"2024-08-29T11:08:30.023331Z","shell.execute_reply":"2024-08-29T11:08:30.043151Z"},"trusted":true},"execution_count":68,"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"        id  neighborhood   latitude  longitude    price  size_in_sqft  \\\n1  7431684             0  25.024620  55.140434  1051938          1191   \n3  7588198             0  25.024620  55.140434  1055093          1191   \n4  7588200             0  25.024620  55.140434   568801           750   \n5  7589790             0  25.022618  55.149350   739000           928   \n7  7621746             0  25.027786  55.154686   650000           795   \n\n   price_per_sqft  no_of_bedrooms  no_of_bathrooms  quality  ...  \\\n1          883.24               2                3        0  ...   \n3          885.89               2                3        2  ...   \n4          758.40               1                2        2  ...   \n5          796.34               2                2        2  ...   \n7          817.61               1                2        0  ...   \n\n   private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n1         False      True        True         True       False  False   \n3         False     False        True         True       False  False   \n4         False     False        True         True       False  False   \n5         False     False        True         True       False  False   \n7         False      True        True         True        True  False   \n\n   vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n1            False              True          False            True  \n3            False             False          False           False  \n4            False             False          False           False  \n5            False             False          False           False  \n7            False              True          False            True  \n\n[5 rows x 38 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>neighborhood</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>price</th>\n      <th>size_in_sqft</th>\n      <th>price_per_sqft</th>\n      <th>no_of_bedrooms</th>\n      <th>no_of_bathrooms</th>\n      <th>quality</th>\n      <th>...</th>\n      <th>private_pool</th>\n      <th>security</th>\n      <th>shared_gym</th>\n      <th>shared_pool</th>\n      <th>shared_spa</th>\n      <th>study</th>\n      <th>vastu_compliant</th>\n      <th>view_of_landmark</th>\n      <th>view_of_water</th>\n      <th>walk_in_closet</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>7431684</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1051938</td>\n      <td>1191</td>\n      <td>883.24</td>\n      <td>2</td>\n      <td>3</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7588198</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>1055093</td>\n      <td>1191</td>\n      <td>885.89</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7588200</td>\n      <td>0</td>\n      <td>25.024620</td>\n      <td>55.140434</td>\n      <td>568801</td>\n      <td>750</td>\n      <td>758.40</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>7589790</td>\n      <td>0</td>\n      <td>25.022618</td>\n      <td>55.149350</td>\n      <td>739000</td>\n      <td>928</td>\n      <td>796.34</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7621746</td>\n      <td>0</td>\n      <td>25.027786</td>\n      <td>55.154686</td>\n      <td>650000</td>\n      <td>795</td>\n      <td>817.61</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>...</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 38 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"split the balance data in X and Y","metadata":{}},{"cell_type":"code","source":"X = dfle.drop(['price'], axis = 1)\ny = dfle['price']","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.045283Z","iopub.execute_input":"2024-08-29T11:08:30.045560Z","iopub.status.idle":"2024-08-29T11:08:30.050766Z","shell.execute_reply.started":"2024-08-29T11:08:30.045536Z","shell.execute_reply":"2024-08-29T11:08:30.049893Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"X.head","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.052053Z","iopub.execute_input":"2024-08-29T11:08:30.052792Z","iopub.status.idle":"2024-08-29T11:08:30.070401Z","shell.execute_reply.started":"2024-08-29T11:08:30.052758Z","shell.execute_reply":"2024-08-29T11:08:30.069539Z"},"trusted":true},"execution_count":70,"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"<bound method NDFrame.head of            id  neighborhood   latitude  longitude  size_in_sqft  \\\n1     7431684             0  25.024620  55.140434          1191   \n3     7588198             0  25.024620  55.140434          1191   \n4     7588200             0  25.024620  55.140434           750   \n5     7589790             0  25.022618  55.149350           928   \n7     7621746             0  25.027786  55.154686           795   \n...       ...           ...        ...        ...           ...   \n1368  7697260            29  25.004258  55.245986           401   \n1369  7697325            29  24.978409  55.092120           430   \n1370  7699951            29  25.100921  55.313162          2745   \n1371  7700652            29  25.091311  55.378277           460   \n1372  7705293            29  25.153080  55.254242           600   \n\n      price_per_sqft  no_of_bedrooms  no_of_bathrooms  quality  maid_room  \\\n1             883.24               2                3        0      False   \n3             885.89               2                3        2      False   \n4             758.40               1                2        2      False   \n5             796.34               2                2        2      False   \n7             817.61               1                2        0      False   \n...              ...             ...              ...      ...        ...   \n1368          648.38               0                1        2      False   \n1369          976.74               0                1        2      False   \n1370         1020.04               2                3        2      False   \n1371          586.96               0                1        1      False   \n1372          600.00               0                1        2      False   \n\n      ...  private_pool  security  shared_gym  shared_pool  shared_spa  study  \\\n1     ...         False      True        True         True       False  False   \n3     ...         False     False        True         True       False  False   \n4     ...         False     False        True         True       False  False   \n5     ...         False     False        True         True       False  False   \n7     ...         False      True        True         True        True  False   \n...   ...           ...       ...         ...          ...         ...    ...   \n1368  ...         False      True        True         True       False  False   \n1369  ...         False      True        True         True       False  False   \n1370  ...         False     False        True         True       False  False   \n1371  ...         False     False        True         True       False  False   \n1372  ...         False      True        True         True       False  False   \n\n      vastu_compliant  view_of_landmark  view_of_water  walk_in_closet  \n1               False              True          False            True  \n3               False             False          False           False  \n4               False             False          False           False  \n5               False             False          False           False  \n7               False              True          False            True  \n...               ...               ...            ...             ...  \n1368            False              True          False           False  \n1369            False             False          False           False  \n1370            False             False          False           False  \n1371            False             False          False           False  \n1372            False             False          False            True  \n\n[1317 rows x 37 columns]>"},"metadata":{}}]},{"cell_type":"code","source":"y.head","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.071298Z","iopub.execute_input":"2024-08-29T11:08:30.071542Z","iopub.status.idle":"2024-08-29T11:08:30.078055Z","shell.execute_reply.started":"2024-08-29T11:08:30.071521Z","shell.execute_reply":"2024-08-29T11:08:30.077214Z"},"trusted":true},"execution_count":71,"outputs":[{"execution_count":71,"output_type":"execute_result","data":{"text/plain":"<bound method NDFrame.head of 1       1051938\n3       1055093\n4        568801\n5        739000\n7        650000\n         ...   \n1368     260000\n1369     420000\n1370    2800000\n1371     270000\n1372     360000\nName: price, Length: 1317, dtype: int64>"},"metadata":{}}]},{"cell_type":"markdown","source":"import the train and test split","metadata":{}},{"cell_type":"code","source":"import sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import ConfusionMatrixDisplay, roc_auc_score\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.079223Z","iopub.execute_input":"2024-08-29T11:08:30.079496Z","iopub.status.idle":"2024-08-29T11:08:30.087531Z","shell.execute_reply.started":"2024-08-29T11:08:30.079466Z","shell.execute_reply":"2024-08-29T11:08:30.086644Z"},"trusted":true},"execution_count":72,"outputs":[]},{"cell_type":"markdown","source":"Assuming 'X' contains features and 'y' contains the target variable","metadata":{}},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)     ","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.088570Z","iopub.execute_input":"2024-08-29T11:08:30.088861Z","iopub.status.idle":"2024-08-29T11:08:30.099413Z","shell.execute_reply.started":"2024-08-29T11:08:30.088836Z","shell.execute_reply":"2024-08-29T11:08:30.098638Z"},"trusted":true},"execution_count":73,"outputs":[]},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train, y_train)\nlr_clf.score(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.100669Z","iopub.execute_input":"2024-08-29T11:08:30.101435Z","iopub.status.idle":"2024-08-29T11:08:30.120247Z","shell.execute_reply.started":"2024-08-29T11:08:30.101402Z","shell.execute_reply":"2024-08-29T11:08:30.119067Z"},"trusted":true},"execution_count":74,"outputs":[{"execution_count":74,"output_type":"execute_result","data":{"text/plain":"0.9414999159624007"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv = ShuffleSplit(n_splits =5, test_size=0.2, random_state=0)\n\ncross_val_score(LinearRegression(), X,y, cv=cv)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.121370Z","iopub.execute_input":"2024-08-29T11:08:30.123225Z","iopub.status.idle":"2024-08-29T11:08:30.257273Z","shell.execute_reply.started":"2024-08-29T11:08:30.123188Z","shell.execute_reply":"2024-08-29T11:08:30.256223Z"},"trusted":true},"execution_count":75,"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"array([0.92262945, 0.93944561, 0.92515594, 0.94313854, 0.9318529 ])"},"metadata":{}}]},{"cell_type":"markdown","source":"Gird Search","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\n\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.258867Z","iopub.execute_input":"2024-08-29T11:08:30.260378Z","iopub.status.idle":"2024-08-29T11:08:30.266783Z","shell.execute_reply.started":"2024-08-29T11:08:30.260338Z","shell.execute_reply":"2024-08-29T11:08:30.265828Z"},"trusted":true},"execution_count":76,"outputs":[]},{"cell_type":"code","source":"def find_the_best_model_using_gridsearchcv(X,y):\n    algos= {\n        'LinerRegression' : {\n            'model': LinerRegression(),\n            'params': {\n                'normalize': [True, False]\n            }\n        },\n        \n        'lasso' : {\n            'model': Lasso(),\n            'params': {\n                'alpha':[1,2],\n                'selection': ['random', 'cyclic']\n            }\n        },\n        \n        'decision_tree' : {\n            'model': DecisionTreeRegressor(),\n            'params': {\n                'criterion': ['mse', 'friedman_mse'],\n                'splitter': ['best', 'random']\n            }\n        }\n    }\n    \n    scores = []\n    cv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=0)\n    for algo_name, config in algos_items():\n        gs = GridSearchCV(config['model'], config['params'], cv=cv, return_train_score=False)\n        gs.fit(X,y)\n        scores.append({\n            'model': algo_name,\n            'best_score':gs.best_score_,\n            'best_params':gs.best_params_\n        })\n        \n    return pd.DataFrame(scores, columns=['model', 'best_score', 'best_params'])","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.268551Z","iopub.execute_input":"2024-08-29T11:08:30.269624Z","iopub.status.idle":"2024-08-29T11:08:30.286815Z","shell.execute_reply.started":"2024-08-29T11:08:30.269570Z","shell.execute_reply":"2024-08-29T11:08:30.285896Z"},"trusted":true},"execution_count":77,"outputs":[]},{"cell_type":"code","source":"#def predict_price(neighborhood, size_in_sqft, no_of_bathrooms, no_of_bedrooms):\n    loc_index = np.where(X.columns == neighborhood)[0][0]\n    \n    x = np.zeros(len(X.columns))\n    x[0] = size_in_sqft\n    x[1] = no_of_bathrooms\n    x[2] = no_of_bedrooms\n    if loc_index >= 0:\n        x[loc_index] = 1\n        \n    return lr_clf.predict([x])[0]\n    ","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.288241Z","iopub.execute_input":"2024-08-29T11:08:30.289716Z","iopub.status.idle":"2024-08-29T11:08:30.300363Z","shell.execute_reply.started":"2024-08-29T11:08:30.289678Z","shell.execute_reply":"2024-08-29T11:08:30.298961Z"},"trusted":true},"execution_count":78,"outputs":[{"traceback":["\u001b[0;36m  Cell \u001b[0;32mIn[78], line 2\u001b[0;36m\u001b[0m\n\u001b[0;31m    loc_index = np.where(X.columns == neighborhood)[0][0]\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"],"ename":"IndentationError","evalue":"unexpected indent (1527196337.py, line 2)","output_type":"error"}]},{"cell_type":"code","source":"#def predict_price(neighborhood, size_in_sqft, no_of_bathrooms, no_of_bedrooms):\n    x[X.columns.get_loc('neighborhood')] = neighborhood\n    loc_index = np.where(X.columns == neighborhood)[0][0]\n    \n    x = np.zeros(len(X.columns))\n    x[X.columns.get_loc('size_in_sqft')] = size_in_sqft\n    x[X.columns.get_loc('no_of_bathrooms')] = no_of_bathrooms\n    x[X.columns.get_loc('no_of_bedrooms')] = no_of_bedrooms\n    if loc_index >= 0:\n        x[loc_index] = 1\n        \n    return lr_clf.predict([x])[0]\n","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.301557Z","iopub.status.idle":"2024-08-29T11:08:30.302723Z","shell.execute_reply.started":"2024-08-29T11:08:30.302418Z","shell.execute_reply":"2024-08-29T11:08:30.302443Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def predict_price(neighborhood, size_in_sqft, no_of_bathrooms, no_of_bedrooms):\n    # Create an input vector with the same length as the number of columns in X\n    x = np.zeros(len(X.columns))\n    \n    # Assign the values to their corresponding indices\n    x[X.columns.get_loc('size_in_sqft')] = size_in_sqft\n    x[X.columns.get_loc('no_of_bathrooms')] = no_of_bathrooms\n    x[X.columns.get_loc('no_of_bedrooms')] = no_of_bedrooms\n    \n    # For the neighborhood, if it's not one-hot encoded, it should match directly\n    if 'neighborhood' in X.columns:\n        # Assuming that 'neighborhood' is an integer encoded or label encoded feature\n        x[X.columns.get_loc('neighborhood')] = neighborhood\n    else:\n        # If neighborhood needs one-hot encoding or doesn't match directly, handle it accordingly\n        return \"Error: Neighborhood handling needs special attention in encoding\"\n    \n    # Predict the price using the model\n    return lr_clf.predict([x])[0]\n","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:11:36.374117Z","iopub.execute_input":"2024-08-29T11:11:36.374504Z","iopub.status.idle":"2024-08-29T11:11:36.381417Z","shell.execute_reply.started":"2024-08-29T11:11:36.374475Z","shell.execute_reply":"2024-08-29T11:11:36.380204Z"},"trusted":true},"execution_count":79,"outputs":[]},{"cell_type":"code","source":"predicted_price = predict_price(19, 2000, 3, 3)\nprint(predicted_price)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:12:16.983016Z","iopub.execute_input":"2024-08-29T11:12:16.983388Z","iopub.status.idle":"2024-08-29T11:12:16.988904Z","shell.execute_reply.started":"2024-08-29T11:12:16.983357Z","shell.execute_reply":"2024-08-29T11:12:16.987868Z"},"trusted":true},"execution_count":84,"outputs":[{"name":"stdout","text":"-10533155.3066595\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n  warnings.warn(\n","output_type":"stream"}]},{"cell_type":"code","source":"X.neighborhood","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.311152Z","iopub.status.idle":"2024-08-29T11:08:30.312707Z","shell.execute_reply.started":"2024-08-29T11:08:30.312407Z","shell.execute_reply":"2024-08-29T11:08:30.312432Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Export the Model","metadata":{}},{"cell_type":"code","source":"import pickle\nwith open('dubai_properties_model.pickle', 'wb') as f:\n    pickle.dump(lr_clf, f)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.314297Z","iopub.status.idle":"2024-08-29T11:08:30.315868Z","shell.execute_reply.started":"2024-08-29T11:08:30.315565Z","shell.execute_reply":"2024-08-29T11:08:30.315590Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import json\ncolumns= {\n    'data_columns': [col.lower() for col in X.columns]\n}\nwith open (\"columns.json\". \"w\") as f:\n    f.write(json.dumps(columns))","metadata":{"execution":{"iopub.status.busy":"2024-08-29T11:08:30.317484Z","iopub.status.idle":"2024-08-29T11:08:30.319056Z","shell.execute_reply.started":"2024-08-29T11:08:30.318762Z","shell.execute_reply":"2024-08-29T11:08:30.318787Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Till this all code save in model\nNow onwards we write server.py and save in server folder","metadata":{}},{"cell_type":"markdown","source":"Diementional Reduction","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Feature Engineering ","metadata":{}}]}